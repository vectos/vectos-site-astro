---
export interface Props {
  videoId: string;
  title?: string;
  width?: string | number;
  height?: string | number;
  autoplay?: boolean;
  muted?: boolean;
  controls?: boolean;
  loop?: boolean;
  start?: number;
  end?: number;
}

const {
  videoId,
  title = "YouTube video player",
  width = "100%",
  height = "315",
  autoplay = false,
  muted = false,
  controls = true,
  loop = false,
  start,
  end,
} = Astro.props;

// Build YouTube embed URL with parameters
const params = new URLSearchParams();
if (autoplay) params.set("autoplay", "1");
if (muted) params.set("mute", "1");
if (!controls) params.set("controls", "0");
if (loop) params.set("loop", "1");
if (start) params.set("start", start.toString());
if (end) params.set("end", end.toString());

const embedUrl = `https://www.youtube.com/embed/${videoId}?${params.toString()}`;
---

<div class={`youtube-player max-w-2xl mx-auto flex justify-center`}>
  <iframe
    width={width}
    height={height}
    src={embedUrl}
    title={title}
    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
    allowfullscreen
    loading="lazy"
  ></iframe>
</div>

<style>
  .youtube-player {
    position: relative;
    width: 100%;
  }
  
  .youtube-player iframe {
    border-radius: 8px;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  }
  
  /* Responsive aspect ratio container */
  .youtube-player.responsive {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 aspect ratio */
    height: 0;
    overflow: hidden;
  }
  
  .youtube-player.responsive iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
</style>